
extend type Query {
    "Find a single user by an identifying attribute."
    user(id: ID, @eq ): User @find

    "List multiple users."
    users: [User!]! @all
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    avatar: String!

    role: Role!

    topic: [Topic] @hasMany

    comment: [Comment] @hasMany

   
}

extend type Mutation{
  createUser(
    name: String!, 
    email: String!, 
    password: String!,
    avatar: String,
    role: Role!
    ): User @create



  updateUser(
    id: ID, 
    name: String, 
    email: String, 
    password: String,
    avatar: String,
    role: Role,
    ): User @update




  deleteUser(
    id: ID, @eq
    ): User @delete
}


enum Role {
  user,
  moderator,
  admin,
}